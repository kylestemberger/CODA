name: Build Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-mac:
    runs-on: macos-12
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_INSTALLER_CERTIFICATE_BASE64: ${{ secrets.BUILD_INSTALLER_CERTIFICATE_BASE64 }}
          P12_INSTALLER_PASSWORD: ${{ secrets.P12_INSTALLER_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          echo "Decoding and installing application certificate"
          echo "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

          echo "Creating application keychain..."
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          echo "Importing application certificate to keychain"
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH

          INSTALLER_CERTIFICATE_PATH=$RUNNER_TEMP/build_installer_certificate.p12
          INSTALLER_KEYCHAIN_PATH=$RUNNER_TEMP/app-signing-installer.keychain-db

          echo "Decoding and installing installer certificate..."
          echo "$BUILD_INSTALLER_CERTIFICATE_BASE64" | base64 --decode > $INSTALLER_CERTIFICATE_PATH

          echo "Creating installer keychain"
          security create-keychain -p "$KEYCHAIN_PASSWORD" $INSTALLER_KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $INSTALLER_KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $INSTALLER_KEYCHAIN_PATH

          echo "Importing installer certificate to keychain"
          security import $INSTALLER_CERTIFICATE_PATH -P "$P12_INSTALLER_PASSWORD" -A -t cert -f pkcs12 -k $INSTALLER_KEYCHAIN_PATH

          echo "Setting keychain search list"
          security list-keychains -s $RUNNER_TEMP/app-signing.keychain-db $RUNNER_TEMP/app-signing-installer.keychain-db

          echo "Verifying application certificate"
          security find-identity -v -p basic $RUNNER_TEMP/app-signing.keychain-db

          echo "Verifying installer certificate"
          security find-identity -v -p basic $RUNNER_TEMP/app-signing-installer.keychain-db

      - name: Set up Xcode
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Build Plugin Mac AU & VST3
        run: |
          cd Builds/MacOSX/CodaBuilds
          xcodebuild -project "Coda.xcodeproj" -scheme "Coda - All" -configuration Release

      - name: Sign Mac Builds
        env:
          HASH_OF_DEVELOPER_ID_APPLICATION: ${{ secrets.HASH_OF_DEVELOPER_ID_APPLICATION }}
        run: |
          # sign components using full identity string
          FULL_IDENTITY_STRING="Developer ID Application: Kyle Stemberger (8SY577X9L5)"
          codesign --deep --force --options=runtime --sign "$FULL_IDENTITY_STRING" --timestamp Builds/MacOSX/CodaBuilds/build/Release/CodaExternalDSP.component || exit 1
          codesign --deep --force --options=runtime --sign "$FULL_IDENTITY_STRING" --timestamp Builds/MacOSX/CodaBuilds/build/Release/CodaExternalDSP.vst3 || exit 1

      - name: Create Installer Mac AU
        run: |
          pkgbuild --root Builds/MacOSX/CodaBuilds/build/Release/ \
          --identifier com.HavenAudio.CODA \
          --install-location Builds/MacOSX/CodaBuilds/build/Release/ \
          --version "1.0.3" \
          CodaExternalDSP-au.pkg

      - name: Create Installer Mac VST3
        run: |
          pkgbuild --root Builds/MacOSX/CodaBuilds/build/Release/ \
          --identifier com.HavenAudio.CODA \
          --install-location Builds/MacOSX/CodaBuilds/build/Release/ \
          --version "1.0.0" \
          CodaExternalDSP-vst3.pkg

      - name: Sign the Installer Packages
        env:
          TEAM_ID: ${{ secrets.TEAM_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APP_PASSWORD: ${{ secrets.APP_PASSWORD }}
        run: |
          security list-keychains
          security find-identity -v -p basic $INSTALLER_KEYCHAIN_PATH
          # Use the correct identity from the installer certificate to sign the package
          xcrun notarytool store-credentials "notarytool-password" --apple-id "$APPLE_ID" --team-id "$TEAM_ID" --password "$APP_PASSWORD"
          productsign --sign "Developer ID Installer: Kyle Stemberger (8SY577X9L5)" CodaExternalDSP-au.pkg CodaExternalDSP-au-signed.pkg
          productsign --sign "Developer ID Installer: Kyle Stemberger (8SY577X9L5)" CodaExternalDSP-vst3.pkg CodaExternalDSP-vst3-signed.pkg
          xcrun notarytool submit CodaExternalDSP-au-signed.pkg --keychain-profile "notarytool-password" --wait
          xcrun notarytool submit CodaExternalDSP-vst3-signed.pkg --keychain-profile "notarytool-password" --wait

      - name: Upload AU Installer
        uses: actions/upload-artifact@v3
        with:
          name: Mac-Installer-AU
          path: CodaExternalDSP-au-signed.pkg

      - name: Upload VST3 Installer
        uses: actions/upload-artifact@v3
        with:
          name: Mac-Installer-VST3
          path: CodaExternalDSP-vst3-signed.pkg
